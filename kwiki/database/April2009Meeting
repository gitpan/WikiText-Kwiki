= Meta-Moose =

speaker: Hans Dieter Pearcey [hdp]

[http://search.cpan.org/dist/Moose Moose] is a postmodern object system for Perl 5.  

Moose's recent rise in popularity has led to a surge of declarative
class-building and accessor-generating modules, but the real power of Moose
comes from its metaclass fundamentals, not from the syntactic sugar of has().
Using Moose as a foundation makes it easier for your code to grow and scale.

I'll cover some of the concepts in Moose that the MOP (Meta-Object Protocol)
makes possible, especially roles and type constraints.  If we have time, I'll
go through a simple Moose extension, focusing on the mechanisms Moose provides
to help your code play nicely with others'.

If the first sentence of this description was news to you, you should at least
read the SYNOPSIS of Moose, and if you can get through Moose::Manual and
Moose::Manual::Concepts, so much the better.  I'll expect a lot of questions,
but I hope to move past "what is an object" pretty quickly.

By the end of the night I hope you'll have a better understanding of the depth
of what Moose provides, and why has() is only the tip of the iceberg.  I don't
expect that everyone will immediately understand every concept provided -- my
goal is to impress you so much with Moose's awesomeness that you're willing to
follow up later on the documentation pointers that I throw out.

[http://calagator.org/events/1250456880 Calagator]

[=3:o] [http://www.flickr.com/search/?w=all&q=moose+yapcna2006&m=tags Moose!]

[http://pdxpm.podasp.com/archive.html?pname=meetings.xml Podcast]

[http://www.weftsoar.net/~hdp/talk/meta-moose/slides/start.html Slides]
